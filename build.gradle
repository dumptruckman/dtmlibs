buildscript {
    ext.kotlin_version = '1.1.4-3'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:0.9.15"
    }
}

plugins {
    id 'net.minecrell.licenser' version '0.3'
}

//task copyJars(type: Copy) {
//    from subprojects.collect { it.tasks.withType(Jar) }
//    into "$buildDir/libs"
//}

allprojects {
    group 'com.dumptruckman.dtmlibs'
    version '1.0-SNAPSHOT'

    license {
        header rootProject.file("license/MIT_HEADER.txt")
        include '**/*.kt'
        newLine false
    }
}

subprojects {
    apply plugin: 'maven'
    apply plugin: 'net.minecrell.licenser'
    apply plugin: 'kotlin'

    repositories {
        mavenCentral()
    }

    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"

        testCompile group: 'junit', name: 'junit', version:'4.12'
        testCompile group: 'org.powermock', name: 'powermock-module-junit4', version:'1.6.1'
        testCompile group: 'org.powermock', name: 'powermock-api-easymock', version:'1.6.1'
        testCompile group: 'org.powermock', name: 'powermock-api-mockito', version:'1.6.1'
        testCompile group: 'org.easymock', name: 'easymock', version:'3.4'
        testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    }

    compileKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }
    compileTestKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier 'sources'
        from sourceSets.main.allSource
        from "${project.rootDir}/LICENSE.txt"
    }

    if (project.hasProperty('mavenUser') && project.hasProperty('mavenPassword')) {
        uploadArchives {
            repositories {
                mavenDeployer {
                    repository(url: "http://repo.onarandombox.com/content/repositories/thirdparty/") {
                        authentication(userName: mavenUser, password: mavenPassword)
                    }
                    snapshotRepository(url: "http://repo.onarandombox.com/content/repositories/thirdparty-dev/") {
                        authentication(userName: mavenUser, password: mavenPassword)
                    }
                }
            }
        }
    }

    license {
        header rootProject.file("license/MIT_HEADER.txt")
        include '**/*.kt'
        newLine false
    }

    artifacts {
        archives sourcesJar
    }
}

project(':logging') {
    dependencies {
        compile 'io.github.microutils:kotlin-logging:1.4.6'
        compile 'org.slf4j:slf4j-api:1.7.21'
    }
}

project(':logback-logging') {
    dependencies {
        compile project(':logging')
        compile 'ch.qos.logback:logback-classic:1.1.3'
    }
}

project(':config') {
    ext.configurateVersion = '3.1'

    dependencies {
        compile 'com.googlecode.gentyref:gentyref:1.1.0'
        compile "ninja.leaping.configurate:configurate-hocon:$configurateVersion"
        compile "ninja.leaping.configurate:configurate-json:$configurateVersion"
        compile "ninja.leaping.configurate:configurate-gson:$configurateVersion"
        compile "ninja.leaping.configurate:configurate-yaml:$configurateVersion"
        compile project(':logging')
    }
}